{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","Context","React","createContext","reducer","state","action","type","contacts","map","contact","id","payload","filter","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","name","email","phone","onClick","style","cursor","float","bind","color","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","About","NotFound","EditContact","updContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.47155576.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/about\" className=\"nav-link\">\n                About\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\nexport default Header;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        ),\n      };\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: (action) => {\n      this.setState((state) => reducer(state, action));\n    },\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\n    // .then((response) => response.json())\n    // .then((data) => {\n    // this.setState({ id: data.id, email: data.email, phone: data.phone });\n    //     });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n\n  //states are also immutable we cannot directly change a state like\n  // //this.state = {\n  //   showContactInfo:false,\n  // }\n  // This approach gives us errors, but we can change states using setState\n  //function\n  //this.setState({showContactInfo: false});\n  //And this is the correct way of changing states\n\n  onShowClick = () => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  onClick={this.onShowClick}\n                  style={{ cursor: \"pointer\" }}\n                  className=\"fas fa-caret-down\"\n                ></i>\n                <i\n                  className=\"far fa-trash-alt\"\n                  style={{ float: \"right\", cursor: \"pointer\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                ></i>\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"far fa-edit mr-2 \"\n                    style={{\n                      float: \"right\",\n                      cursor: \"pointer\",\n                      color: \"black\",\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone Number: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"../contacts/Contact\";\nimport { Consumer } from \"../../context\";\nclass Contacts extends Component {\n  //using a constructor to create a state is not a necessity we can do without it as well\n  //see example below for that\n  //   constructor() {\n  //     super();\n  //     this.state = {\n  //       contacts: [\n  //         {\n  //           id: 1,\n  //           name: \"John Doe\",\n  //           email: \"jdoe@gmail.com\",\n  //           phone: \"111-111-111\",\n  //         },\n  //         {\n  //           id: 2,\n  //           name: \"Karen Williams\",\n  //           email: \"kwills@gmail.com\",\n  //           phone: \"222-222-222\",\n  //         },\n  //         {\n  //           id: 3,\n  //           name: \"Henry Johnson\",\n  //           email: \"hjohn@gmail.com\",\n  //           phone: \"333-333-333\",\n  //         },\n  //       ],\n  //     };\n  //   }\n  //   state = {\n  //     contacts: [\n  //       {\n  //         id: 1,\n  //         name: \"John Doe\",\n  //         email: \"jdoe@gmail.com\",\n  //         phone: \"111-111-111\",\n  //       },\n  //       {\n  //         id: 2,\n  //         name: \"Karen Williams\",\n  //         email: \"kwills@gmail.com\",\n  //         phone: \"222-222-222\",\n  //       },\n  //       {\n  //         id: 3,\n  //         name: \"Henry Johnson\",\n  //         email: \"hjohn@gmail.com\",\n  //         phone: \"333-333-333\",\n  //       },\n  //     ],\n  //   };\n\n  //   deleteContact(id) {\n  //     const { contacts } = this.state;\n  //     const contactsAfterDelete = contacts.filter((contact) => contact.id !== id);\n  //     this.setState({ contacts: contactsAfterDelete });\n  //   }\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-3\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map((contact) => (\n                <Contact\n                  key={contact.id}\n                  contact={contact}\n                  //deleteClickHandler={this.deleteContact.bind(this, contact.id)}\n                />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n\n    // const { contacts } = this.state;\n\n    // return (\n    //   <React.Fragment>\n    //     {contacts.map((contact) => (\n    //       <Contact\n    //         key={contact.id}\n    //         contact={contact}\n    //         deleteClickHandler={this.deleteContact.bind(this, contact.id)}\n    //       />\n    //     ))}\n    //   </React.Fragment>\n    // );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  type,\n  name,\n  placeholder,\n  value,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error,\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\",\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n// import uuid from \"uuid/v4\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check For Errors\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      // id: uuid(),\n      name: name,\n      email: email,\n      phone: phone,\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    //Clear State\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Your Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Your Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone Number\"\n                    name=\"phone\"\n                    placeholder=\"Enter Your Phone Number...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-block btn-light\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">This is the about page of our application</h1>\n      <p className=\"display-8\">\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Inventore\n        praesentium harum quaerat, itaque perspiciatis cum, deleniti porro\n        cumque dignissimos quis fugit odio quos reprehenderit esse sapiente\n        dolore quae voluptates quasi?\n      </p>\n      <p className=\"text-light\">version 1.0.0</p>\n    </div>\n  );\n};\nexport default About;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n// import uuid from \"uuid/v4\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n    });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check For Errors\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updContact = {\n      name: name,\n      email: email,\n      phone: phone,\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    //Clear State\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Your Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Your Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone Number\"\n                    name=\"phone\"\n                    placeholder=\"Enter Your Phone Number...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-block btn-light\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}